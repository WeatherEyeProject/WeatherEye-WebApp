@model IEnumerable<WeatherEye.Models.RainSensor>

@{
    ViewData["Title"] = "RainSensor";
}

<head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chart.js/dist/Chart.min.css">
</head>
<!-- Element HTML, w którym zostanie wygenerowany wykres -->

<h2>Wykres dla danych z czujnika deszczu</h2>
<div>
    <canvas id="myChart"></canvas>
</div>

<!-- Skrypt JavaScript generujący wykres liniowy na podstawie danych z listy "rain" -->
<script>
    // Pobranie danych z listy "rain" i przypisanie ich do zmiennych
    // Pobranie danych z listy "rain" i przypisanie ich do zmiennych
    let dates = [];
    let rain = [];
    let intensity = [];

    @foreach (var item in Model)
    {
        <text>
            dates.push('@item.DateOfReading.ToString("yyyy-MM-dd")');
        rain.push('@item.Rain');
        intensity.push('@item.IntensityOfRain');
        </text>
    }
                // Konfiguracja i generowanie wykresu liniowego przy użyciu danych z listy
        for (let i = 0; i < rain.length; i++) {
        rain[i] = rain[i].toString();
        rain[i] = rain[i].replace(",", ".");
    }

    for (let i = 0; i < intensity.length; i++) {
        intensity[i] = intensity[i].toString();
        intensity[i] = intensity[i].replace(",", ".");
    }

    let ctx = document.getElementById('myChart').getContext('2d');
    let chart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: dates, // Dane na osi OX
            datasets: [{
                label: 'Rain Data', // Etykieta wykresu
                data: rain, // Dane na osi OY
                backgroundColor: 'rgba(75, 192, 192, 0.2)', // Kolor wypełnienia wykresu
                fill: true,
                borderColor: 'rgba(75, 192, 192, 1)', // Kolor linii wykresu
                tension: 0.1, // Grubość linii wykresu
                yAxisID: 'y',
            },
            {
                label: 'Intensity Data',
                data: intensity,
                backgroundColor: 'rgba(139, 0, 0, 0.2)',
                fill: true,
                borderColor: 'rgba(139, 0, 0, 0.2)',
                tension: 0.1,
                yAxisID: 'y1',
            }
            ]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    type: 'linear',
                    position: 'left',
                    title: {
                        display: 'true',
                        text: 'Oś dla danych RAIN',
                        font: {
                            size: 30
                        }
                    },
                },
                y1: {
                    type: 'linear',
                    position: 'right',
                    title: {
                        display: 'true',
                        text: 'Oś dla danych Intensity',
                        font: {
                            size: 30
                        }
                    },
                }
            }
        }
    });
</script>

<br />

<h2>Odczyty z czujnika Deszczu </h2>

<table class="table">
    <thead>
        <tr>
            <th>Rain</th>
            <th>Intensity Of Rain</th>
            <th>Date &amp; Time Of Reading</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var rain in Model)
        {
            <tr>
                <td>@Math.Round(Convert.ToDouble(rain.Rain), 2)mm</td>
                <td>@Math.Round(Convert.ToDouble(rain.IntensityOfRain), 2)</td>
                <td>@rain.DateOfReading.ToString("yyyy-MM-dd")</td>
                <td>
                    <a href="@Url.Action("RainSensorDetails", new { date = rain.DateOfReading.ToString("yyyy-MM-dd") })" class="btn btn-outline-dark">Szczegóły dnia</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
<br />