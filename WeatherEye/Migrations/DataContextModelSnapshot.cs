// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherEye.Models;

#nullable disable

namespace WeatherEye.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WeatherEye.Models.DustSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfReading")
                        .HasColumnType("datetime2");

                    b.Property<double>("IntensityPm10")
                        .HasColumnType("float");

                    b.Property<double>("IntensityPm2_5")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("WeatherEye.Models.EnvironmentalSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Dampness")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfReading")
                        .HasColumnType("datetime2");

                    b.Property<double>("IAQuality")
                        .HasColumnType("float");

                    b.Property<double>("Pressure")
                        .HasColumnType("float");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("EnvironmentalSensors");
                });

            modelBuilder.Entity("WeatherEye.Models.LightSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfReading")
                        .HasColumnType("datetime2");

                    b.Property<double>("IlluminanceLux")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("LightSensors");
                });

            modelBuilder.Entity("WeatherEye.Models.RainSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfReading")
                        .HasColumnType("datetime2");

                    b.Property<double>("IntensityOfRain")
                        .HasColumnType("float");

                    b.Property<double>("Rain")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("RainSensors");
                });

            modelBuilder.Entity("WeatherEye.Models.UVSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfReading")
                        .HasColumnType("datetime2");

                    b.Property<double>("IlluminanceUV")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("UVSensors");
                });
#pragma warning restore 612, 618
        }
    }
}
